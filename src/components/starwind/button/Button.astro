---
import type { HTMLAttributes } from 'astro/types';
import { tv, type VariantProps } from 'tailwind-variants';

interface Props extends HTMLAttributes<'button'>, Omit<HTMLAttributes<'a'>, 'type'>, VariantProps<typeof button> {}

const { variant, size, class: className, ...rest } = Astro.props;

const button = tv({
  base: [
    'inline-flex items-center justify-center gap-1.5 rounded-xl font-semibold whitespace-nowrap uppercase',
    '[&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',
    'starwind-transition-colors',
    'focus-visible:outline-2 focus-visible:outline-offset-2',
    'disabled:pointer-events-none disabled:opacity-50'
  ],
  variants: {
    variant: {
      default: 'bg-white text-primary hover:bg-primary hover:text-white focus-visible:outline-outline',
      primary: 'bg-primary text-white hover:bg-white hover:text-primary focus-visible:outline-primary'
    },
    size: {
      sm: 'h-12.5 px-4 py-2 text-base',
      md: 'h-15 px-4 py-2 text-base',
      lg: 'h-12 px-8 py-2 text-lg',
      icon: 'h-11 w-11'
    }
  },
  defaultVariants: { variant: 'default', size: 'md' }
});

const Tag = Astro.props.href ? 'a' : 'button';
---

<Tag class={button({ variant, size, class: className })} {...rest}>
  <slot />
</Tag>
